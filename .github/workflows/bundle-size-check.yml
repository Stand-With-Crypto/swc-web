name: Bundle Size Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'src/**'
      - 'next.config.ts'
      - 'package.json'
      - 'package-lock.json'
      - 'tailwind.config.ts'
      - 'webpack.config.js'

jobs:
  bundle-size-check:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment for build
        run: |
          echo "NEXT_PUBLIC_ENVIRONMENT=production" >> $GITHUB_ENV
          echo "DISABLE_SENTRY_SOURCEMAPS=true" >> $GITHUB_ENV
          echo "ANALYZE=true" >> $GITHUB_ENV

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Run codegen
        run: npm run codegen

      - name: Extract component translations (PR)
        run: npm run translations:extract || echo "No translations to extract"

      - name: Build PR branch
        run: |
          echo "📦 Building PR branch..."
          mkdir -p bundle-analysis
          npm run build 2>&1 | tee build-output.log

          # Copy webpack stats if generated
          if [ -f bundle-reports/webpack-stats.json ]; then
            cp bundle-reports/webpack-stats.json bundle-analysis/pr-stats.json
          else
            echo "⚠️ No webpack stats generated for PR branch"
            echo '{"totalSize": 0, "assets": [], "bundleAnalysis": null}' > bundle-analysis/pr-stats.json
          fi

          # Capture Next.js build output
          grep -E "(Route|First Load JS|└|├)" build-output.log > bundle-analysis/pr-build.txt || echo "No route info captured" > bundle-analysis/pr-build.txt

      - name: Checkout main branch
        run: |
          git fetch origin main
          git checkout origin/main

      - name: Install dependencies (main)
        run: npm ci

      - name: Generate Prisma client (main)
        run: npm run db:generate

      - name: Run codegen (main)
        run: npm run codegen

      - name: Extract component translations (main)
        run: npm run translations:extract || echo "No translations to extract"

      - name: Build main branch
        run: |
          echo "📦 Building main branch..."
          npm run build 2>&1 | tee build-output-main.log

          # Copy webpack stats if generated
          if [ -f bundle-reports/webpack-stats.json ]; then
            cp bundle-reports/webpack-stats.json bundle-analysis/main-stats.json
          else
            echo "⚠️ No webpack stats generated for main branch"
            echo '{"totalSize": 0, "assets": [], "bundleAnalysis": null}' > bundle-analysis/main-stats.json
          fi

          # Capture Next.js build output
          grep -E "(Route|First Load JS|└|├)" build-output-main.log > bundle-analysis/main-build.txt || echo "No route info captured" > bundle-analysis/main-build.txt

      - name: Compare bundle sizes
        id: compare
        run: |
          echo "📊 Comparing bundle sizes..."

          # Ensure bundle-analysis directory exists with required files
          mkdir -p bundle-analysis

          # Create fallback files if they don't exist
          [ ! -f bundle-analysis/main-stats.json ] && echo '{"totalSize": 0, "assets": []}' > bundle-analysis/main-stats.json
          [ ! -f bundle-analysis/pr-stats.json ] && echo '{"totalSize": 0, "assets": []}' > bundle-analysis/pr-stats.json
          [ ! -f bundle-analysis/main-build.txt ] && echo "" > bundle-analysis/main-build.txt
          [ ! -f bundle-analysis/pr-build.txt ] && echo "" > bundle-analysis/pr-build.txt

          # Generate comment
          if node scripts/bundle-size-comment.js > bundle-analysis/comment.md; then
            echo "✅ Bundle comparison successful"
          else
            echo "⚠️ Bundle comparison failed, generating fallback comment"
            echo "# 📦 Bundle Size Report\n\n⚠️ Bundle analysis encountered issues. Check build logs for details." > bundle-analysis/comment.md
          fi

          # Set output for comment
          {
            echo 'comment<<EOF'
            cat bundle-analysis/comment.md
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Find existing comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '📦 Bundle Size Report'

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.compare.outputs.comment }}
          edit-mode: replace

      - name: Upload bundle analysis artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bundle-analysis-${{ github.event.pull_request.number }}
          path: bundle-analysis/
          retention-days: 30
