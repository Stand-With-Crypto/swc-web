# Next.js docs use a .env.local file for local development, but because other libraries
# (e.g. Prisma) need a .env file (not .env.local), we standardize everything to .env
# When running with this template you will see a bunch of "missing env var" warnings
# If you need to access any features that wont work because of missing env vars, reach out to a core contributor

# Create an upstash redis free account for this
UPSTASH_REDIS_REST_URL=
UPSTASH_REDIS_REST_TOKEN=

# These values can be generated by creating a free account and generating your own client ID/secret at https://thirdweb.com/dashboard/settings.
NEXT_PUBLIC_THIRDWEB_CLIENT_ID=
THIRD_WEB_CLIENT_SECRET=

# - Run in terminal: `npm i -g ethers && node -e "console.log(new require('ethers').Wallet.createRandom().privateKey)"`.
# - Copy-paste the output below.
THIRDWEB_AUTH_PRIVATE_KEY=

# You can create a free mixpanel project for this
NEXT_PUBLIC_MIXPANEL_PROJECT_TOKEN=

# You can get this by creating a project through google console
NEXT_PUBLIC_GOOGLE_CIVIC_API_KEY=
NEXT_PUBLIC_GOOGLE_PLACES_API_KEY=

# If you are not a core contributor, you should use docker compose and leave this as is
# If you are a core contributor you can use SWC PlanetScale, for that follow the steps below:
# - Request access to the Stand With Crypto PlanetScale account (reach out to a core contributor for an invitation).
# - Once you receive your invite, you'll want to login and go to the `swc-web` database.
# - Click the "Branches" tab.
# - Click "New Branch" button.
# - Name the branch "[yourgithubusername]-local" and set the base branch to "testing".
# - Press "Create Branch".
# - After your branch has initialized, press the "Connect" button.
# - Create a user with the Admin role, and press "Create Password".
# - In the next screen, find the "Connect With" select dropdown and select "Prisma". Copy paste the resulting URL below.
DATABASE_URL="mysql://root:root@localhost:3306/swc-web"

# https://github.com/keonik/prisma-erd-generator?tab=readme-ov-file#disabled
DISABLE_ERD="true"

# Leave as is. This is the default port for the local development server.
NEXT_PUBLIC_THIRDWEB_AUTH_DOMAIN="localhost:3000"
NEXT_PUBLIC_ENVIRONMENT="local"

# ETH address for your local web3 wallet of choice that you will be connecting to the app. 
# Fill it with your crypto address or leave it as a dummy value
LOCAL_USER_CRYPTO_ADDRESS="0x000000000000000000"

# Logger maximum verbosity level to display
# All levels to the right of the one selected will show
NEXT_PUBLIC_LOG_LEVEL="info" # debug | info | warn | error | custom 

SUPPRESS_SENTRY_ERRORS_ON_LOCAL="true"

# Whether or not to log the sql queries coming from Prisma
LOG_DATABASE="false"

# Reduces the number of pre-generated pages to speed up local development/preview deploys. 
# Set to false if you need to test logic specific to build pregeneration
MINIMIZE_PAGE_PRE_GENERATION="true"

# If you want to test the cookie consent banner locally without having to clear the cookie every time, set this to true.
NEXT_PUBLIC_DEBUG_COOKIE_CONSENT="false"

# Verified partner secret keys
VERIFIED_SWC_PARTNER_SECRET_COINBASE="super_secret_coinbase_partner_key"

# Allows to create a live event action without checking the event date
NEXT_PUBLIC_BYPASS_LIVE_EVENT_DURATION_CHECK="false"

# These are contract addresses for minting and db registration 
# These values are here as dummys for database seed 
LEGACY_NFT_DEPLOYER_WALLET="0x000000000000000000"
SWC_DOT_ETH_WALLET="0x000000000000000000"
SWC_SHIELD_NFT_CONTRACT_ADDRESS="0x000000000000000000"
CALL_REPRESENTATIVE_NFT_CONTRACT_ADDRESS="0x000000000000000000"
I_AM_A_VOTER_NFT_CONTRACT_ADDRESS="0x000000000000000000"
STAND_WITH_CRYPTO_LEGACY_NFT_CONTRACT_ADDRESS="0x000000000000000000"
STAND_WITH_CRYPTO_SUPPORTER_NFT_CONTRACT_ADDRESS="0x000000000000000000"
LA_CRYPTO_EVENT_2024_03_04_NFT_CONTRACT_ADDRESS="0x000000000000000000"

### OPTIONAL ###

# If you have a different contract you want to display at the mint action, put it's address here
NEXT_PUBLIC_OVERRIDE_MINT_NFT_CONTRACT_ADDRESS=

# We use BaseScan to check transaction fees
BASESCAN_API_KEY=